
services:
  # PostgreSQL Database
  db:
    image: postgres:16-alpine
    container_name: hukbaek-db
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    mem_limit: 200m
    mem_reservation: 100m

  # Backend (NestJS)
  backend:
    build:
      context: .
      dockerfile: apps/backend/Dockerfile.dev
    container_name: hukbaek-backend
    env_file:
      - .env
    ports:
      - "4000:4000"
    volumes:
      - ./apps/backend:/app/apps/backend
      - ./packages/shared:/app/packages/shared
      - /app/node_modules
      - /app/apps/backend/node_modules
      - /app/packages/shared/node_modules
    depends_on:
      db:
        condition: service_healthy
    command: sh -c "cd /app/packages/shared && pnpm build && cd /app/apps/backend && pnpm dev"
    restart: unless-stopped
    mem_limit: 550m
    mem_reservation: 400m

  # Frontend (Svelte + Vite)
  frontend:
    build:
      context: .
      dockerfile: apps/frontend/Dockerfile.dev
    container_name: hukbaek-frontend
    env_file:
      - .env
    ports:
      - "5173:5173"
    volumes:
      - ./apps/frontend:/app/apps/frontend
      - ./packages/shared:/app/packages/shared
      - /app/node_modules
      - /app/apps/frontend/node_modules
      - /app/packages/shared/node_modules
    depends_on:
      - backend
    command: sh -c "cd /app/apps/frontend && pnpm dev --host"
    restart: unless-stopped
    mem_limit: 300m
    mem_reservation: 200m

volumes:
  postgres_data:
