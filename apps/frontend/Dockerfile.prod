# Build stage
FROM node:20-alpine AS builder

WORKDIR /app

# pnpm 설치
RUN npm install -g pnpm

# 루트 설정 파일들 복사
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./
COPY tsconfig.base.json ./

# 패키지 파일들 복사
COPY packages/shared/package.json ./packages/shared/package.json
COPY packages/shared/tsconfig.json ./packages/shared/tsconfig.json
COPY apps/frontend/package.json ./apps/frontend/package.json
COPY apps/frontend/tsconfig.json ./apps/frontend/tsconfig.json
COPY apps/frontend/tsconfig.node.json ./apps/frontend/tsconfig.node.json

# 의존성 설치
RUN pnpm install --frozen-lockfile

# 소스 코드 복사
COPY packages/shared ./packages/shared
COPY apps/frontend ./apps/frontend

# shared 패키지 빌드
RUN cd packages/shared && pnpm build

# Frontend 빌드
RUN cd apps/frontend && pnpm build

# Production stage
FROM nginx:alpine

# Nginx 설정 복사
COPY apps/frontend/nginx.conf /etc/nginx/conf.d/default.conf

# 빌드된 파일 복사
COPY --from=builder /app/apps/frontend/dist /usr/share/nginx/html

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]
